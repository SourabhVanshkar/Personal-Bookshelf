{"version":3,"sources":["BookSearch.js","PersonalBookshelf.js","App.js","reportWebVitals.js","index.js"],"names":["BookSearch","searchTimeout","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","personalBookshelf","setPersonalBookshelf","_useState7","_useState8","bookAdded","setBookAdded","useEffect","savedBookshelf","JSON","parse","localStorage","getItem","React","createElement","className","type","placeholder","value","onChange","e","query","target","clearTimeout","setTimeout","trim","fetch","concat","then","response","json","data","docs","catch","error","console","Link","to","map","book","key","title","edition_count","onClick","updatedBookshelf","_toConsumableArray","setItem","stringify","prev","_objectSpread","_defineProperty","handleAddToBookshelf","PersonalBookshelf","bookKey","filter","handleRemoveBook","App","Router","Switch","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"kSA+EeA,MA3Ef,WAAsB,IA4ChBC,EA5CgBC,EACkBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAAAI,EACQL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAAAG,EACYT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAvDE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAAAG,EACZb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GA0C9B,OAxCAG,oBAAU,WACR,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GACxEV,EAAqBM,IACpB,IAsCDK,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,SACEE,KAAK,OACLC,YAAY,oBACZC,MAAOzB,EACP0B,SA3Ca,SAACC,GACpB,IAAMC,EAAQD,EAAEE,OAAOJ,MACvBxB,EAAe2B,GAEfE,aAAanC,GACbA,EAAgBoC,WAAW,WACJ,KAAjBH,EAAMI,OACRC,MAAK,yCAAAC,OAA0CN,EAAK,qBACjDO,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACG,GACLjC,EAAiBiC,EAAKC,QAEvBC,MAAM,SAACC,GACNC,QAAQD,MAAM,uBAAwBA,KAG1CpC,EAAiB,KAElB,SA4BDe,IAAAC,cAACsB,IAAI,CAACC,GAAG,cACPxB,IAAAC,cAAA,UAAQC,UAAU,oBAAmB,iBAEvCF,IAAAC,cAAA,OAAKC,UAAU,kBACZlB,EAAcyC,IAAI,SAACC,GAAI,OACtB1B,IAAAC,cAAA,OAAKC,UAAU,OAAOyB,IAAKD,EAAKC,KAC9B3B,IAAAC,cAAA,UAAKyB,EAAKE,OACV5B,IAAAC,cAAA,SAAG,kBAAgByB,EAAKG,gBACtBrC,EAAUkC,EAAKC,MACf3B,IAAAC,cAAA,UAAQ6B,QAAS,kBAlCA,SAACJ,GAC5B,IAAMK,EAAgB,GAAAjB,OAAAkB,YAAO5C,GAAiB,CAAEsC,IAChDrC,EAAqB0C,GACrBjC,aAAamC,QAAQ,YAAarC,KAAKsC,UAAUH,IAGjDtC,EAAa,SAAC0C,GAAI,OAAAC,YAAA,GACbD,EAAIE,YAAA,GACNX,EAAKC,KAAM,MA0BmBW,CAAqBZ,KAAO,gCC9BlDa,MApCf,WAA6B,IAAA/D,EACuBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvDY,EAAiBV,EAAA,GAAEW,EAAoBX,EAAA,GAa9C,OAXAgB,oBAAU,WACR,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GACxEV,EAAqBM,IACpB,IASDK,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAACsB,IAAI,CAACC,GAAG,KACPxB,IAAAC,cAAA,UAAQC,UAAU,iBAChBF,IAAAC,cAAA,YAAM,oBAGVD,IAAAC,cAAA,WACAD,IAAAC,cAAA,OAAKC,UAAU,aACZd,EAAkBqC,IAAI,SAACC,GAAI,OAC1B1B,IAAAC,cAAA,OAAKC,UAAU,YAAYyB,IAAKD,EAAKC,KACnC3B,IAAAC,cAAA,UAAKyB,EAAKE,OACV5B,IAAAC,cAAA,SAAG,kBAAgByB,EAAKG,eACxB7B,IAAAC,cAAA,UAAQ6B,QAAS,kBApBF,SAACU,GACxB,IAAMT,EAAmB3C,EAAkBqD,OAAO,SAAAf,GAAI,OAAIA,EAAKC,MAAQa,IACvEnD,EAAqB0C,GACrBjC,aAAamC,QAAQ,YAAarC,KAAKsC,UAAUH,IAiBlBW,CAAiBhB,EAAKC,OAAM,gBChBhDgB,MAXf,WACE,OACE3C,IAAAC,cAAC2C,IAAM,KACL5C,IAAAC,cAAC4C,IAAM,KACL7C,IAAAC,cAAC6C,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,UAAW3E,IACjC0B,IAAAC,cAAC6C,IAAK,CAACE,KAAK,aAAaC,UAAWV,OCE7BW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA9C,EAAA,GAAAQ,KAAAsC,EAAAC,KAAA,UAAqBvC,KAAK,SAAAwC,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjE,IAAAC,cAACD,IAAMkE,WAAU,KACflE,IAAAC,cAAC0C,EAAG,QAORO","file":"static/js/main.957a4192.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './BookSearch.css'; \n\nfunction BookSearch() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [personalBookshelf, setPersonalBookshelf] = useState([]);\n  const [bookAdded, setBookAdded] = useState({});\n\n  useEffect(() => {\n    const savedBookshelf = JSON.parse(localStorage.getItem('bookshelf')) || [];\n    setPersonalBookshelf(savedBookshelf);\n  }, []);\n\n  const handleSearch = (e) => {\n    const query = e.target.value;\n    setSearchQuery(query);\n\n    clearTimeout(searchTimeout);\n    searchTimeout = setTimeout(() => {\n      if (query.trim() !== '') {\n        fetch(`https://openlibrary.org/search.json?q=${query}&limit=10&page=1`)\n          .then((response) => response.json())\n          .then((data) => {\n            setSearchResults(data.docs);\n          })\n          .catch((error) => {\n            console.error('Error fetching data:', error);\n          });\n      } else {\n        setSearchResults([]); \n      }\n    }, 300); \n  };\n\n  const handleAddToBookshelf = (book) => {\n    const updatedBookshelf = [...personalBookshelf, book];\n    setPersonalBookshelf(updatedBookshelf);\n    localStorage.setItem('bookshelf', JSON.stringify(updatedBookshelf));\n    \n    \n    setBookAdded((prev) => ({\n      ...prev,\n      [book.key]: true,\n    }));\n  };\n\n  let searchTimeout;\n\n  return (\n    <div className=\"container\">\n      <h1>SEARCH BY BOOK NAME</h1>\n      <div className=\"search-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for a Book\"\n          value={searchQuery}\n          onChange={handleSearch}\n        />\n      </div>\n      <Link to=\"/bookshelf\">\n        <button className=\"button-bookshelf\">My Bookshelf</button>\n      </Link>\n      <div className=\"search-results\">\n        {searchResults.map((book) => (\n          <div className=\"card\" key={book.key}>\n            <h3>{book.title}</h3>\n            <p>Edition Count: {book.edition_count}</p>\n            {!bookAdded[book.key] && ( \n              <button onClick={() => handleAddToBookshelf(book)}>Add to Bookshelf</button>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default BookSearch;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PersonalBookshelf.css';\n\nfunction PersonalBookshelf() {\n  const [personalBookshelf, setPersonalBookshelf] = useState([]);\n\n  useEffect(() => {\n    const savedBookshelf = JSON.parse(localStorage.getItem('bookshelf')) || [];\n    setPersonalBookshelf(savedBookshelf);\n  }, []);\n\n  const handleRemoveBook = (bookKey) => {\n    const updatedBookshelf = personalBookshelf.filter(book => book.key !== bookKey);\n    setPersonalBookshelf(updatedBookshelf);\n    localStorage.setItem('bookshelf', JSON.stringify(updatedBookshelf));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>MY BOOKSHELF</h1>\n      <Link to=\"/\">\n        <button className=\"button-search\">\n          <span>Back to Search</span>\n          </button>\n      </Link>\n      <br />\n      <div className=\"bookshelf\">\n        {personalBookshelf.map((book) => (\n          <div className=\"book-card\" key={book.key}>\n            <h3>{book.title}</h3>\n            <p>Edition Count: {book.edition_count}</p>\n            <button onClick={() => handleRemoveBook(book.key)}>Remove</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PersonalBookshelf;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport BookSearch from './BookSearch';\nimport PersonalBookshelf from './PersonalBookshelf';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={BookSearch} />\n        <Route path=\"/bookshelf\" component={PersonalBookshelf} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}